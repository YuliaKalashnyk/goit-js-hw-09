{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,aAC9BC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cA2BrB,SAASC,EAAcN,EAAUO,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEX,WAAUO,SAElC,OAAO,IAAIK,SAAQ,SAACC,EAASC,GACvBN,GACFK,EAAQF,GAEVG,EAAOH,E,IAjCXf,EAAKmB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAcb,MAAMc,OACnCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAEpCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDlB,EAAckB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUO,EAAKmB,EAALnB,MACjBoB,YAAW,WACTjC,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAANvB,EAAM,MAAKR,E,GACjEQ,E,IAEJwB,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUO,EAAKmB,EAALnB,MAClBoB,YAAW,WACTjC,EAAAkC,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAANvB,EAAM,MAAKR,E,GAC9DQ,E,IAEPW,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, options);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, options);\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$ce04d3a99e08e73b$var$createPromise","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","setTimeout","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.74ca66aa.js.map"}